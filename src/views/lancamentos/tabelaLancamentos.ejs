<!DOCTYPE html>
<html lang="pt-br">
<%- include('../partials/head', { title: 'Tabela de Lançamentos' }) %>

<head>
    <style>
        .w-95 {
            width: 95%;
            margin: auto;
        }

        /* Espaçador para o header fixo com espaçamento adicional */
        .header-spacer {
            height: 110px !important;
        }

        /* Barra de cabeçalho acima da tabela */
        .header-bar {
            padding: 0.5rem !important;
            border-radius: 5px !important;
            margin-bottom: 0.5rem !important;
            position: relative !important;
            z-index: 5 !important;
        }

        /* Contêiner da tabela com scroll */
        .table-container {
            max-height: calc(80vh - 40px) !important;
            overflow-y: auto !important;
            overflow-x: hidden !important;
            position: relative !important;
            display: block !important;
        }

        /* Tabela */
        .table-custom {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1) !important;
            border-radius: 8px !important;
            width: 100% !important;
            border-collapse: collapse !important;
            table-layout: fixed !important;
        }

        /* Cabeçalho fixo */
        .table-custom thead {
            position: sticky !important;
            top: -1px !important;
            z-index: 10 !important;
            background-color: #007bff !important;
            color: white !important;
        }

        .table-custom thead th {
            padding: 0.8rem !important;
            background-color: var(--dark-color-1) !important;
            color: white !important;
        }

        .table-custom th,
        .table-custom td {
            padding: 5px 0.5rem !important;
            vertical-align: middle !important;
            text-align: center !important;
            overflow: hidden !important;
            text-overflow: ellipsis !important;
            white-space: nowrap !important;
        }
 
        /* Id */
        .table-custom th:nth-child(1),
        .table-custom td:nth-child(1) {
            width: 2% !important;
        }

        /* Entrada/Saida */
        .table-custom th:nth-child(2),
        .table-custom td:nth-child(2) {
            width: 4% !important;
        }

        /* data */
        .table-custom th:nth-child(3),
        .table-custom td:nth-child(3) {
            width: 5% !important;
        }

        /* tipo de lancamentro */
        .table-custom th:nth-child(4),
        .table-custom td:nth-child(4) {
            width: 8% !important;
        }

        /* produto */
        .table-custom th:nth-child(5),
        .table-custom td:nth-child(5) {
            width: 5% !important;
        }

        /* forma de pagamento */
        .table-custom th:nth-child(6),
        .table-custom td:nth-child(6) {
            width: 5% !important;
        }

        /* parcelas */
        .table-custom th:nth-child(7),
        .table-custom td:nth-child(7) {
            width: 5% !important;
        }

        /* Valor */
        .table-custom th:nth-child(8),
        .table-custom td:nth-child(8) {
            width: 5% !important;
        }


        /* Descrição */
        .table-custom th:nth-child(9),
        .table-custom td:nth-child(9) {
            width: 15% !important;
        }

        /* Vencimento */
        .table-custom th:nth-child(10),
        .table-custom td:nth-child(10) {
            width: 5% !important;
        }

        /* açoes */
        .table-custom th:nth-child(11),
        .table-custom td:nth-child(11) {
            width: 10% !important;
        }


        .table-custom tbody tr:hover {
            background-color: #f8f9fa !important;
            transition: background-color 0.3s !important;
        }

        .action-buttons .btn {
            margin-right: 1px !important;
            margin-bottom: 1px !important;
        }

        .action-buttons .btn:last-child {
            margin-right: 0 !important;
        }

        .view-btn,
        .edit-btn,
        .delete-btn {
            max-width: 32% !important;
            min-width: 32% !important;
            padding-inline: 0;
            margin: 0;
        }

        /* Evitar scroll na página inteira */
        html,
        body {
            overflow-y: hidden !important;
            /* Impede scroll na página inteira */
        }

        /* Media Query para notebooks */
        @media (max-width: 1366px) {
            .table-container {
                max-height: calc(70vh - 40px) !important;
            }
        }
    </style>
</head>

<body class="bg-light w-95">
<%- include('../partials/header') %>

    <!-- Espaçador para compensar o header com espaçamento adicional -->
    <div class="header-spacer"></div>

    <!-- Mensagens de Sucesso/Falha -->
    <div id="alert-container"></div>

    <% if (typeof success !=='undefined' ) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= success %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    <% } %>

    <% if (typeof error !=='undefined' ) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <%= error %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    <% } %>

    <main class="main-lancamentos">
        <div class="row header-bar mb-0">
            <div class="col-6">
                <h1 class="text-dark mb-0 fw-bold">Lançamentos Cadastrados</h1>
            </div>
            <div class="col-6 d-flex justify-content-end align-items-center">
                <a type="button" class="btn btn-secondary mb-0" href="/lancamentos/add">
                    <i class="bi bi-person-add"></i> Novo Lancamentos
                </a>
            </div>
        </div>
        <div class="table-container">
            <table class="table table-bordered table-custom mb-0">
                <thead class="text-center fs-6">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">E / S</th>
                        <th scope="col">DATA</th>
                        <th scope="col">TIPO DE LANÇAMENTO</th>
                        <th scope="col">PRODUTO</th>
                        <th scope="col">PAGAMENTO</th>
                        <th scope="col">QTDE. DE PARCELAS</th>
                        <th scope="col">VALOR</th>
                        <th scope="col">DESCRIÇÃO</th>
                        <th scope="col">VENCIMENTO</th>
                        <th scope="col">AÇÕES</th>
                    </tr>
                </thead>
                <tbody class="text-center align-middle">
                    <% lancamentos.forEach((lancamentos)=> { %>
                        <tr>
                            <td class="col-lancamentos" data-label="id">
                                <%= lancamentos.id %>
                            </td>
                            <td class="col-produto" data-label="Entrada-saida">
                                <%= lancamentos.entrada_saida %>
                            </td>
                            <td class="col-chave" data-label="Data">
                                <%= lancamentos.data %>
                            </td>
                            <td class="col-maquina" data-label="Tipo-de-lançamento">
                                <%= lancamentos.tipo_de_lancamento %>
                            </td>
                            <td class="col-endereco text-center" data-label="Produto">
                                <%= lancamentos.produto %>
                            </td>
                            <td class="col-responsavel text-center" data-label="Forma-de-pagamento">
                                <%= lancamentos.forma_de_pagamento %>
                            </td>
                            <td class="col-responsavel text-center" data-label="Quantidade-de-parcelas">
                                <%= lancamentos.qtde_de_parcelas %>
                            </td>
                            <td class="col-responsavel text-center" data-label="Vaçor">
                                <%= lancamentos.valor %>
                            </td>
                            <td class="col-responsavel text-center" data-label="Descrição">
                                <%= lancamentos.descricao %>
                            <td class="col-responsavel text-center" data-label="Vencimento">
                                <%= lancamentos.vencimento %>
                            </td>
                        
                            <td class="col-acoes">
                                <div class="action-buttons">
                                    <a type="button"
                                        class="btn btn-light border btn-sm view-btn"
                                        data-id="<%= lancamentos.id %>">
                                        <i class="bi bi-eye"></i> Detalhes
                                    </a>
                                    <a type="button" class="btn btn-warning btn-sm edit-btn"
                                        data-id="<%= lancamentos.id %>">
                                        <i class="bi bi-pencil"></i> Editar
                                    </a>
                                    <a type="button" class="btn btn-danger btn-sm delete-btn"
                                        data-id="<%= lancamentos.id %>">
                                        <i class="bi bi-person-x"></i> Excluir
                                    </a>
                                </div>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </main>

    <!-- Modal de Sucesso para Exclusão -->
    <div class="modal fade" id="successDeleteModal" tabindex="-1"
        aria-labelledby="successDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title" id="successDeleteModalLabel">Sucesso!</h5>
                    <button type="button" class="btn-close btn-close-white"
                        data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Lancamentos excluído com sucesso!
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="okDeleteButton">OK</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Erro para Exclusão -->
    <div class="modal fade" id="errorDeleteModal" tabindex="-1"
        aria-labelledby="errorDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="errorDeleteModalLabel">Erro!</h5>
                    <button type="button" class="btn-close btn-close-white"
                        data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="errorDeleteMessage">
                    Erro ao excluir o lancamentos
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger"
                        data-bs-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <% if (search) { %>
        <div class="d-flex justify-content-center pb-5">
            <a href="/lancamentos" class="btn btn-primary px-5 fs-5">Voltar</a>
        </div>
    <% } %>

    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous">
    </script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Função para formatar valor para moeda brasileira
        function formatCurrency(value) {
            const numValue = typeof value === 'string' ? parseFloat(value.replace(',', '.')) : value;
            return numValue.toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });
        }

        // Função para formatar data do formato americano (YYYY-MM-DD) para brasileiro (DD/MM/YYYY)
        function formatDate(dateStr) {
            if (!dateStr) return '';
            const [year, month, day] = dateStr.split('-');
            return `${day}/${month}/${year}`;
        }

        // Função para formatar o tipo de lançamento
        function formatTipoLancamento(tipo) {
            const tiposFormatados = {
                'compra': 'Compra',
                'extra': 'Extra',
                'incremento_de_capital': 'Incremento de Capital',
                'pro-labore': 'Pró-Labore',
                'receita_dos_pontos': 'Receita dos Pontos',
                'gastos_recorrentes': 'Gastos Recorrentes',
                'bonus': 'Bônus'
            };
            return tiposFormatados[tipo] || tipo;
        }

        // Função para formatar telefone (se aplicável)
        function formatPhoneNumber(phone) {
            const cleaned = ('' + phone).replace(/\D/g, '');
            if (cleaned.length === 11) {
                return `(${cleaned.slice(0, 2)}) ${cleaned.slice(2, 7)}-${cleaned.slice(7)}`;
            }
            return phone;
        }

        // Formatar valores na coluna "Valor"
        const valueCells = document.querySelectorAll('td[data-label="Vaçor"]');
        valueCells.forEach(cell => {
            const rawValue = cell.textContent.trim();
            cell.textContent = formatCurrency(rawValue);
        });

        // Formatar datas na coluna "Data"
        const dateCells = document.querySelectorAll('td[data-label="Data"]');
        dateCells.forEach(cell => {
            const rawDate = cell.textContent.trim();
            cell.textContent = formatDate(rawDate);
        });

        // Formatar datas na coluna "Vencimento"
        const dueDateCells = document.querySelectorAll('td[data-label="Vencimento"]');
        dueDateCells.forEach(cell => {
            const rawDueDate = cell.textContent.trim();
            cell.textContent = formatDate(rawDueDate);
        });

        // Formatar tipo de lançamento na coluna "Tipo de Lançamento"
        const tipoCells = document.querySelectorAll('td[data-label="Tipo-de-lançamento"]');
        tipoCells.forEach(cell => {
            const rawTipo = cell.textContent.trim();
            cell.textContent = formatTipoLancamento(rawTipo);
        });

        // Formatar telefones na coluna "Contato" (se aplicável)
        const contactCells = document.querySelectorAll('.col-contato');
        contactCells.forEach(cell => {
            const rawPhone = cell.getAttribute('data-telefone');
            if (rawPhone) {
                cell.textContent = formatPhoneNumber(rawPhone);
            }
        });

        // Configurar modais e botões
        const viewButtons = document.querySelectorAll('.view-btn');
        const editButtons = document.querySelectorAll('.edit-btn');
        const deleteButtons = document.querySelectorAll('.delete-btn');

        const successDeleteModal = new bootstrap.Modal(document.getElementById('successDeleteModal'));
        const errorDeleteModal = new bootstrap.Modal(document.getElementById('errorDeleteModal'));
        const errorDeleteMessage = document.getElementById('errorDeleteMessage');

        // Configurar botão OK do modal de sucesso
        document.getElementById('okDeleteButton').addEventListener('click', function () {
            successDeleteModal.hide();
            window.location.href = '/lancamentos/table';
        });

        // Função para lidar com a exclusão
        function handleDelete(idLancamentos) {
            if (confirm('Tem certeza que deseja EXCLUIR este Lancamentos?')) {
                console.log('Confirmação aceita para ID:', idLancamentos);
                fetch(`/lancamentos/${idLancamentos}`, {
                    method: 'DELETE',
                    credentials: 'include',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => {
                        console.log('Status da resposta:', response.status);
                        console.log('Response OK:', response.ok);
                        console.log('Headers da resposta:', response.headers.get('Content-Type'));
                        console.log('Response URL:', response.url);
                        if (response.ok) {
                            console.log('Exclusão bem-sucedida, exibindo modal de sucesso');
                            successDeleteModal.show();
                            setTimeout(() => {
                                successDeleteModal.hide();
                                window.location.href = '/lancamentos/table';
                            }, 3000);
                        } else if (response.status === 401) {
                            console.log('Usuário não autenticado, redirecionando para login');
                            errorDeleteMessage.textContent = 'Sessão expirada. Por favor, faça login novamente.';
                            errorDeleteModal.show();
                            setTimeout(() => {
                                window.location.href = '/users/login';
                            }, 3000);
                        } else {
                            console.log('Exclusão falhou, exibindo modal de erro');
                            response.text().then(text => {
                                console.log('Corpo da resposta:', text);
                                errorDeleteMessage.textContent = 'Erro ao excluir o lancamentos: ' + text;
                                errorDeleteModal.show();
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Erro no fetch:', error);
                        errorDeleteMessage.textContent = `Erro ao processar a solicitação: ${error.message}`;
                        errorDeleteModal.show();
                    });
            } else {
                console.log('Confirmação cancelada para ID:', idLancamentos);
                return;
            }
        }

        // Remover quaisquer listeners existentes para evitar múltiplos cliques
        deleteButtons.forEach(button => {
            const newButton = button.cloneNode(true);
            button.parentNode.replaceChild(newButton, button);
        });

        // Adicionar listeners para os botões
        document.querySelectorAll('.view-btn').forEach(button => {
            button.addEventListener('click', function () {
                const idLancamentos = this.getAttribute('data-id');
                window.location.href = `/lancamentos/${idLancamentos}/view`;
            });
        });

        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', function () {
                const idLancamentos = this.getAttribute('data-id');
                window.location.href = `/lancamentos/${idLancamentos}/edit`;
            });
        });

        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const idLancamentos = this.getAttribute('data-id');
                handleDelete(idLancamentos);
            }, { once: true }); // Garante que o evento seja disparado apenas uma vez por clique
        });
    });
</script>

<%- include('../partials/footer') %>
</body>

</html>